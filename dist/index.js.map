{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import './style/index.scss'\nimport { TModalOptions } from './model/modal'\n\nexport class SModals {\n    selector: string\n    options?: TModalOptions\n\n    constructor(selector: string, options?: TModalOptions) {\n        this.selector = selector\n        this.options = options\n        if (this.options?.onlyOpenButton) {\n            const openModalBtns = document.querySelectorAll(selector)\n            console.log('openModalBtns: ', openModalBtns)\n            return\n        }\n        this.initRenderListeners()\n    }\n\n    private initRenderListeners() {\n        const cards = document.querySelectorAll(this.selector)\n        cards.forEach((card) => {\n            const openBtn = card.querySelector('.open-modal-btn')\n            console.log('openBtn: ', openBtn)\n            openBtn\n                ? openBtn.addEventListener('click', () =>\n                      this.renderModal(card as HTMLElement)\n                  )\n                : card.addEventListener('click', () =>\n                      this.renderModal(card as HTMLElement)\n                  )\n        })\n        document.addEventListener('click', (event) => {\n            if (event.target instanceof Element) {\n                const { target } = event\n                const { classList: targetClasses } = target\n                if (\n                    targetClasses.contains('modal-button-close') ||\n                    targetClasses.contains('modal-backdrop')\n                ) {\n                    this.unMountModal()\n                }\n            }\n        })\n    }\n\n    private renderModal(contentElement: HTMLElement) {\n        const title =\n            contentElement.dataset.modaltitle || this.options?.modalTitle\n        const header = title ? `<h2 class=\"modal-header\">${title}</h2>` : ''\n        const imgContent = Array.from(\n            contentElement.querySelectorAll('[data-modalimg]')\n        ).reduce((prev, cur) => {\n            return (prev += `\n            <div class='img-wrap'>\n                <img src=\"${cur.getAttribute('src')} alt=\"${cur.getAttribute(\n                'alt'\n            )}\">\n            </div>`)\n        }, ``)\n        const textContent = Array.from(\n            contentElement.querySelectorAll('[data-modaltext]')\n        ).reduce((prev, cur) => {\n            return (prev += `<p>${cur.textContent}</p>`)\n        }, ``)\n\n        const template = `\n            <div class=\"modal-wrapper\">\n                <div class=\"modal-backdrop\"></div>\n                <div class=\"modal-container\">\n                    ${header}\n                    <div class=\"modal-body\">\n                        ${imgContent}\n                        ${textContent}\n                    </div>\n                    <div class=\"modal-actions\">\n                        <button class=\"modal-button-close\">${\n                            this.options?.btnCloseText || 'Close'\n                        }</button>\n                    </div>\n                </div>\n            </div> \n        `\n        document.body.insertAdjacentHTML('beforeend', template)\n    }\n\n    private unMountModal() {\n        document.querySelector('.modal-wrapper')?.remove()\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAGA,IAAA,OAAA,kBAAA,YAAA;IAII,SAAY,OAAA,CAAA,QAAgB,EAAE,OAAuB,EAAA;;AACjD,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;AACxB,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;AACtB,QAAA,IAAI,MAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,EAAE;YAC9B,IAAM,aAAa,GAAG,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAA;AACzD,YAAA,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,aAAa,CAAC,CAAA;YAC7C,OAAM;AACT,SAAA;QACD,IAAI,CAAC,mBAAmB,EAAE,CAAA;KAC7B;AAEO,IAAA,OAAA,CAAA,SAAA,CAAA,mBAAmB,GAA3B,YAAA;QAAA,IAyBC,KAAA,GAAA,IAAA,CAAA;QAxBG,IAAM,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;AACtD,QAAA,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI,EAAA;YACf,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAA;AACrD,YAAA,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAA;YACjC,OAAO;AACH,kBAAE,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAA;AAC9B,oBAAA,OAAA,KAAI,CAAC,WAAW,CAAC,IAAmB,CAAC,CAAA;AAArC,iBAAqC,CACxC;AACH,kBAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAA;AAC3B,oBAAA,OAAA,KAAI,CAAC,WAAW,CAAC,IAAmB,CAAC,CAAA;AAArC,iBAAqC,CACxC,CAAA;AACX,SAAC,CAAC,CAAA;AACF,QAAA,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAC,KAAK,EAAA;AACrC,YAAA,IAAI,KAAK,CAAC,MAAM,YAAY,OAAO,EAAE;AACzB,gBAAA,IAAA,MAAM,GAAK,KAAK,CAAA,MAAV,CAAU;AAChB,gBAAA,IAAW,aAAa,GAAK,MAAM,CAAA,SAAX,CAAW;AAC3C,gBAAA,IACI,aAAa,CAAC,QAAQ,CAAC,oBAAoB,CAAC;AAC5C,oBAAA,aAAa,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAC1C;oBACE,KAAI,CAAC,YAAY,EAAE,CAAA;AACtB,iBAAA;AACJ,aAAA;AACL,SAAC,CAAC,CAAA;KACL,CAAA;IAEO,OAAW,CAAA,SAAA,CAAA,WAAA,GAAnB,UAAoB,cAA2B,EAAA;;AAC3C,QAAA,IAAM,KAAK,GACP,cAAc,CAAC,OAAO,CAAC,UAAU,KAAI,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,CAAA,CAAA;AACjE,QAAA,IAAM,MAAM,GAAG,KAAK,GAAG,6BAA4B,CAAA,MAAA,CAAA,KAAK,EAAO,OAAA,CAAA,GAAG,EAAE,CAAA;AACpE,QAAA,IAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CACzB,cAAc,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CACrD,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,GAAG,EAAA;AACf,YAAA,QAAQ,IAAI,IAAI,2EAEA,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,EAAS,SAAA,CAAA,CAAA,MAAA,CAAA,GAAG,CAAC,YAAY,CAC5D,KAAK,CACR,EAAA,yBAAA,CACM,EAAC;SACX,EAAE,EAAE,CAAC,CAAA;AACN,QAAA,IAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAC1B,cAAc,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CACtD,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,GAAG,EAAA;YACf,QAAQ,IAAI,IAAI,KAAA,CAAA,MAAA,CAAM,GAAG,CAAC,WAAW,EAAM,MAAA,CAAA,EAAC;SAC/C,EAAE,EAAE,CAAC,CAAA;AAEN,QAAA,IAAM,QAAQ,GAAG,0KAAA,CAAA,MAAA,CAIH,MAAM,EAEF,4EAAA,CAAA,CAAA,MAAA,CAAA,UAAU,uCACV,WAAW,EAAA,gJAAA,CAAA,CAAA,MAAA,CAIT,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,YAAY,KAAI,OAAO,iGAKxD,CAAA;QACD,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAA;KAC1D,CAAA;AAEO,IAAA,OAAA,CAAA,SAAA,CAAA,YAAY,GAApB,YAAA;;QACI,CAAA,EAAA,GAAA,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,EAAE,CAAA;KACrD,CAAA;IACL,OAAC,OAAA,CAAA;AAAD,CAAC,EAAA;;;;"}